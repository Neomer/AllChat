#ifndef CCHATPROTOCOL_H
#define CCHATPROTOCOL_H

#include <QObject>
#include <QByteArray>
#include <QVariant>

#include "QTcpSocket.h"
#include "CErrorProcessor.h"
#include "CChatProtocolStructures.h"

class CChatProtocol : public QObject
{
	Q_OBJECT

public:
	explicit CChatProtocol(QObject *parent = 0);

	QByteArray createPackage(void * data, int length, SChatProtoHeaderType type);

	QByteArray createPackageRoomInfo(SChatProtoRoomInfo data);
	QByteArray createPackageUserInfo(SChatProtoUserInfo data);

	void setSocket(QTcpSocket * socket);
	void send(QByteArray data);

public slots:
	void appendData(QByteArray data);

signals:
	void receivePackageAuth(SChatProtoAuth package);
	void receivePackageRoomCreate(SChatProtoRoomCreate package);
	void receivePackageRoomIn(SChatProtoRoomIn package);
	void receivePackageRoomOut(SChatProtoRoomOut package);
	void receivePackageRoomInfo(SChatProtoRoomInfo package);
	void receivePackageMessage(SChatProtoMessage package);
	void receivePackageUserInfo(SChatProtoUserInfo package);

private:
	quint32 getID();
	quint16 getControl(const char * data, int length);

	quint32 parse();
	bool checkControl();

	bool parseAuth();
	bool parseRoomCreate();
	bool parseRoomInfo();
	bool parseRoomIn();
	bool parseRoomOut();
	bool parseMessage();
	bool parseUserInfo();


	QByteArray __buffer;
	quint32 __id;
	QTcpSocket * __socket;
};

#endif // CCHATPROTOCOL_H
